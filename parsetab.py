
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightUNOTleftMENORQUEMAYORQUEIGUALIGUALleftMASMENOSleftPORleftDIVIrightUMENOSAND CADENA CHAR COMA DECIMAL DIVI ENTERO ID IGUAL IGUALIGUAL LLAVEA LLAVEC MAS MAYORQUE MENORQUE MENOS NOT OR PARA PARC POR PUNTOCOMA RBOOLEAN RBREAK RELSE RFALSE RFLOAT RFUNC RIF RINT RMAIN RPRINT RRETURN RSTRING RTRUE RVar RWHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion      : imprimir_instr finins\n                        | declaracion_instr finins\n                        | asignacion_instr finins\n                        | if_instr\n                        | while_instr\n                        | break_instr finins\n                        | main_instr\n                        | funcion_instr\n                        | llamada_instr finins\n                        | return_instr fininsfinins       : PUNTOCOMA\n                    | instruccion        : error PUNTOCOMAimprimir_instr     : RPRINT PARA expresion PARCdeclaracion_instr     : RVar ID IGUAL expresiondeclaracion_instr     : RVar IDasignacion_instr     : ID IGUAL expresionif_instr     : RIF PARA expresion PARC LLAVEA instrucciones LLAVECif_instr     : RIF PARA expresion PARC LLAVEA instrucciones LLAVEC RELSE LLAVEA instrucciones LLAVECif_instr     : RIF PARA expresion PARC LLAVEA instrucciones LLAVEC RELSE if_instrwhile_instr     : RWHILE PARA expresion PARC LLAVEA instrucciones LLAVECbreak_instr     : RBREAKmain_instr     : RMAIN PARA PARC LLAVEA instrucciones LLAVECfuncion_instr     : RFUNC ID PARA parametros PARC LLAVEA instrucciones LLAVECfuncion_instr     : RFUNC ID PARA PARC LLAVEA instrucciones LLAVECparametros     : parametros COMA parametroparametros    : parametroparametro     : tipo IDllamada_instr     : ID PARA PARCllamada_instr     : ID PARA parametros_llamada PARCparametros_llamada     : parametros_llamada COMA parametro_llamadaparametros_llamada    : parametro_llamadaparametro_llamada     : expresionreturn_instr     : RRETURN expresiontipo     : RINT\n                | RFLOAT\n                | RSTRING\n                | RBOOLEAN \n    expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIVI expresion\n            | expresion MENORQUE expresion\n            | expresion MAYORQUE expresion\n            | expresion IGUALIGUAL expresion\n            | expresion AND expresion\n            | expresion OR expresion\n    \n    expresion : MENOS expresion %prec UMENOS \n            | NOT expresion %prec UNOT \n    \n    expresion :   PARA expresion PARC \n    expresion : llamada_instrexpresion : IDexpresion : ENTEROexpresion : DECIMALexpresion : CHARexpresion : CADENAexpresion : RTRUEexpresion : RFALSE'
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[14,14,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,14,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,14,14,14,14,14,14,-26,14,14,-21,-24,14,-28,-27,14,-23,14,-22,]),'RPRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[15,15,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,15,15,15,15,15,15,-26,15,15,-21,-24,15,-28,-27,15,-23,15,-22,]),'RVar':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[16,16,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,16,16,16,16,16,16,-26,16,16,-21,-24,16,-28,-27,16,-23,16,-22,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[17,17,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,34,-25,40,46,-2,-4,-14,-5,-6,-9,-12,-13,-16,46,-19,46,46,46,46,-37,46,46,46,-54,-55,-56,-57,-58,-59,-60,-61,46,-20,-32,46,46,46,46,46,46,46,46,46,-51,-52,-17,-18,-33,46,17,108,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,17,17,17,17,17,17,-26,17,17,-21,-24,17,-28,-27,17,-23,17,-22,]),'RIF':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,],[18,18,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,18,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,18,18,18,18,18,18,-26,18,18,-21,-24,18,-28,18,-27,18,-23,18,-22,]),'RWHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[19,19,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,19,19,19,19,19,19,-26,19,19,-21,-24,19,-28,-27,19,-23,19,-22,]),'RBREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[20,20,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,20,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,20,20,20,20,20,20,-26,20,20,-21,-24,20,-28,-27,20,-23,20,-22,]),'RMAIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[21,21,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,21,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,21,21,21,21,21,21,-26,21,21,-21,-24,21,-28,-27,21,-23,21,-22,]),'RFUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[22,22,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,22,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,22,22,22,22,22,22,-26,22,22,-21,-24,22,-28,-27,22,-23,22,-22,]),'RRETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,82,91,92,93,94,95,96,97,98,99,100,102,103,104,107,109,110,111,112,114,115,116,117,118,120,121,122,123,124,],[23,23,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,23,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,23,23,23,23,23,23,-26,23,23,-21,-24,23,-28,-27,23,-23,23,-22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,91,92,93,94,95,96,97,98,99,100,111,115,116,118,120,122,124,],[0,-1,-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,-26,-21,-24,-28,-27,-23,-22,]),'LLAVEC':([3,4,5,6,7,8,9,10,11,12,13,20,24,25,26,27,28,29,30,31,32,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,91,92,93,94,95,96,97,98,99,100,104,109,110,111,114,115,116,117,118,120,122,123,124,],[-3,-15,-15,-15,-7,-8,-15,-10,-11,-15,-15,-25,-2,-4,-14,-5,-6,-9,-12,-13,-16,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,111,115,116,-26,118,-21,-24,120,-28,-27,-23,124,-22,]),'PUNTOCOMA':([4,5,6,9,12,13,14,20,34,41,45,46,47,48,49,50,51,52,55,56,73,74,76,77,78,91,92,93,94,95,96,97,98,99,100,],[26,26,26,26,26,26,32,-25,-19,-37,-54,-55,-56,-57,-58,-59,-60,-61,-20,-32,-51,-52,-17,-18,-33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,]),'PARA':([15,17,18,19,21,23,33,35,36,37,38,40,42,43,44,46,54,64,65,66,67,68,69,70,71,72,79,],[33,36,37,38,39,44,44,44,44,44,44,63,44,44,44,36,44,44,44,44,44,44,44,44,44,44,44,]),'IGUAL':([17,34,],[35,54,]),'MENOS':([23,33,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,91,92,93,94,95,96,97,98,99,100,],[42,42,42,42,42,42,65,42,42,42,-54,-55,-56,-57,-58,-59,-60,-61,65,42,65,-32,65,65,65,42,42,42,42,42,42,42,42,42,-51,65,65,65,-33,42,-42,-43,-44,-45,65,65,65,65,65,-53,]),'NOT':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ENTERO':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'DECIMAL':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'CHAR':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'CADENA':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'RTRUE':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'RFALSE':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'PARC':([36,39,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,63,73,74,75,78,83,85,91,92,93,94,95,96,97,98,99,100,101,108,113,],[56,62,-54,-55,-56,-57,-58,-59,-60,-61,76,-32,78,-35,-36,80,81,84,-51,-52,100,-33,105,-30,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,-34,-31,-29,]),'MAS':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[64,-54,-55,-56,-57,-58,-59,-60,-61,64,64,-32,64,64,64,-51,64,64,64,-33,-42,-43,-44,-45,64,64,64,64,64,-53,]),'POR':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[66,-54,-55,-56,-57,-58,-59,-60,-61,66,66,-32,66,66,66,-51,66,66,66,-33,66,66,-44,-45,66,66,66,66,66,-53,]),'DIVI':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[67,-54,-55,-56,-57,-58,-59,-60,-61,67,67,-32,67,67,67,-51,67,67,67,-33,67,67,67,-45,67,67,67,67,67,-53,]),'MENORQUE':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[68,-54,-55,-56,-57,-58,-59,-60,-61,68,68,-32,68,68,68,-51,68,68,68,-33,-42,-43,-44,-45,-46,-47,-48,68,68,-53,]),'MAYORQUE':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[69,-54,-55,-56,-57,-58,-59,-60,-61,69,69,-32,69,69,69,-51,69,69,69,-33,-42,-43,-44,-45,-46,-47,-48,69,69,-53,]),'IGUALIGUAL':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[70,-54,-55,-56,-57,-58,-59,-60,-61,70,70,-32,70,70,70,-51,70,70,70,-33,-42,-43,-44,-45,-46,-47,-48,70,70,-53,]),'AND':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[71,-54,-55,-56,-57,-58,-59,-60,-61,71,71,-32,71,71,71,-51,-52,71,71,-33,-42,-43,-44,-45,-46,-47,-48,-49,71,-53,]),'OR':([41,45,46,47,48,49,50,51,52,53,55,56,59,60,61,73,74,75,77,78,91,92,93,94,95,96,97,98,99,100,],[72,-54,-55,-56,-57,-58,-59,-60,-61,72,72,-32,72,72,72,-51,-52,72,72,-33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,]),'COMA':([45,46,47,48,49,50,51,52,56,57,58,59,73,74,78,83,85,91,92,93,94,95,96,97,98,99,100,101,108,113,],[-54,-55,-56,-57,-58,-59,-60,-61,-32,79,-35,-36,-51,-52,-33,106,-30,-42,-43,-44,-45,-46,-47,-48,-49,-50,-53,-34,-31,-29,]),'LLAVEA':([62,80,81,84,105,119,],[82,102,103,107,112,121,]),'RINT':([63,106,],[87,87,]),'RFLOAT':([63,106,],[88,88,]),'RSTRING':([63,106,],[89,89,]),'RBOOLEAN':([63,106,],[90,90,]),'RELSE':([115,],[119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,82,102,103,107,112,121,],[2,104,109,110,114,117,123,]),'instruccion':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[3,24,3,3,3,24,3,24,24,3,24,24,3,24,]),'imprimir_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_instr':([0,2,82,102,103,104,107,109,110,112,114,117,119,121,123,],[7,7,7,7,7,7,7,7,7,7,7,7,122,7,7,]),'while_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'break_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'main_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funcion_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'llamada_instr':([0,2,23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,82,102,103,104,107,109,110,112,114,117,121,123,],[12,12,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,12,12,12,12,12,12,12,12,12,12,12,12,]),'return_instr':([0,2,82,102,103,104,107,109,110,112,114,117,121,123,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'finins':([4,5,6,9,12,13,],[25,27,28,29,30,31,]),'expresion':([23,33,35,36,37,38,42,43,44,54,64,65,66,67,68,69,70,71,72,79,],[41,53,55,59,60,61,73,74,75,77,91,92,93,94,95,96,97,98,99,59,]),'parametros_llamada':([36,],[57,]),'parametro_llamada':([36,79,],[58,101,]),'parametros':([63,],[83,]),'parametro':([63,106,],[85,113,]),'tipo':([63,106,],[86,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',173),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','grammar.py',177),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',185),
  ('instruccion -> imprimir_instr finins','instruccion',2,'p_instruccion','grammar.py',194),
  ('instruccion -> declaracion_instr finins','instruccion',2,'p_instruccion','grammar.py',195),
  ('instruccion -> asignacion_instr finins','instruccion',2,'p_instruccion','grammar.py',196),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','grammar.py',197),
  ('instruccion -> while_instr','instruccion',1,'p_instruccion','grammar.py',198),
  ('instruccion -> break_instr finins','instruccion',2,'p_instruccion','grammar.py',199),
  ('instruccion -> main_instr','instruccion',1,'p_instruccion','grammar.py',200),
  ('instruccion -> funcion_instr','instruccion',1,'p_instruccion','grammar.py',201),
  ('instruccion -> llamada_instr finins','instruccion',2,'p_instruccion','grammar.py',202),
  ('instruccion -> return_instr finins','instruccion',2,'p_instruccion','grammar.py',203),
  ('finins -> PUNTOCOMA','finins',1,'p_finins','grammar.py',207),
  ('finins -> <empty>','finins',0,'p_finins','grammar.py',208),
  ('instruccion -> error PUNTOCOMA','instruccion',2,'p_instruccion_error','grammar.py',212),
  ('imprimir_instr -> RPRINT PARA expresion PARC','imprimir_instr',4,'p_imprimir','grammar.py',218),
  ('declaracion_instr -> RVar ID IGUAL expresion','declaracion_instr',4,'p_declaracion','grammar.py',224),
  ('declaracion_instr -> RVar ID','declaracion_instr',2,'p_declaracion2','grammar.py',228),
  ('asignacion_instr -> ID IGUAL expresion','asignacion_instr',3,'p_asignacion','grammar.py',234),
  ('if_instr -> RIF PARA expresion PARC LLAVEA instrucciones LLAVEC','if_instr',7,'p_if1','grammar.py',240),
  ('if_instr -> RIF PARA expresion PARC LLAVEA instrucciones LLAVEC RELSE LLAVEA instrucciones LLAVEC','if_instr',11,'p_if2','grammar.py',244),
  ('if_instr -> RIF PARA expresion PARC LLAVEA instrucciones LLAVEC RELSE if_instr','if_instr',9,'p_if3','grammar.py',248),
  ('while_instr -> RWHILE PARA expresion PARC LLAVEA instrucciones LLAVEC','while_instr',7,'p_while','grammar.py',254),
  ('break_instr -> RBREAK','break_instr',1,'p_break','grammar.py',260),
  ('main_instr -> RMAIN PARA PARC LLAVEA instrucciones LLAVEC','main_instr',6,'p_main','grammar.py',266),
  ('funcion_instr -> RFUNC ID PARA parametros PARC LLAVEA instrucciones LLAVEC','funcion_instr',8,'p_funcion_1','grammar.py',272),
  ('funcion_instr -> RFUNC ID PARA PARC LLAVEA instrucciones LLAVEC','funcion_instr',7,'p_funcion_2','grammar.py',276),
  ('parametros -> parametros COMA parametro','parametros',3,'p_parametros_1','grammar.py',282),
  ('parametros -> parametro','parametros',1,'p_parametros_2','grammar.py',287),
  ('parametro -> tipo ID','parametro',2,'p_parametro','grammar.py',293),
  ('llamada_instr -> ID PARA PARC','llamada_instr',3,'p_llamada1','grammar.py',299),
  ('llamada_instr -> ID PARA parametros_llamada PARC','llamada_instr',4,'p_llamada2','grammar.py',303),
  ('parametros_llamada -> parametros_llamada COMA parametro_llamada','parametros_llamada',3,'p_parametrosLL_1','grammar.py',309),
  ('parametros_llamada -> parametro_llamada','parametros_llamada',1,'p_parametrosLL_2','grammar.py',314),
  ('parametro_llamada -> expresion','parametro_llamada',1,'p_parametroLL','grammar.py',320),
  ('return_instr -> RRETURN expresion','return_instr',2,'p_return','grammar.py',326),
  ('tipo -> RINT','tipo',1,'p_tipo','grammar.py',332),
  ('tipo -> RFLOAT','tipo',1,'p_tipo','grammar.py',333),
  ('tipo -> RSTRING','tipo',1,'p_tipo','grammar.py',334),
  ('tipo -> RBOOLEAN','tipo',1,'p_tipo','grammar.py',335),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',349),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',350),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',351),
  ('expresion -> expresion DIVI expresion','expresion',3,'p_expresion_binaria','grammar.py',352),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',353),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',354),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',355),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',356),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',357),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',380),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','grammar.py',381),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_agrupacion','grammar.py',390),
  ('expresion -> llamada_instr','expresion',1,'p_expresion_llamada','grammar.py',395),
  ('expresion -> ID','expresion',1,'p_expresion_identificador','grammar.py',399),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','grammar.py',403),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','grammar.py',407),
  ('expresion -> CHAR','expresion',1,'p_expresion_char','grammar.py',411),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','grammar.py',415),
  ('expresion -> RTRUE','expresion',1,'p_expresion_true','grammar.py',419),
  ('expresion -> RFALSE','expresion',1,'p_expresion_false','grammar.py',423),
]
